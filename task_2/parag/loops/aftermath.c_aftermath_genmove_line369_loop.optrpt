Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 17.0.1.132 Build 20161005

Compiler options: -I/home/parag/hpa/task_2/parag/loops/common -I/home/parag/hpa/task_2/parag/loops/input -O3 -g -std=c99 -xHost -vec-threshold100 -vec -qopt-report-phase=vec -qopt-report=5 -o aftermath.c_aftermath_genmove_line369.vec -lcrypto -lssl -lm

Begin optimization report for: loop()

    Report from: Vector optimizations [vec]


LOOP BEGIN at aftermath.c_aftermath_genmove_line369_loop.c(16,2)
   remark #15389: vectorization support: reference delta[k] has unaligned access   [ aftermath.c_aftermath_genmove_line369_loop.c(17,21) ]
   remark #15388: vectorization support: reference temp[k] has aligned access   [ aftermath.c_aftermath_genmove_line369_loop.c(18,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15328: vectorization support: irregularly indexed load was emulated for the variable <board[pos2]>, part of index is read from memory   [ aftermath.c_aftermath_genmove_line369_loop.c(18,20) ]
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <distance[pos2]>, masked, part of index is read from memory   [ aftermath.c_aftermath_genmove_line369_loop.c(18,40) ]
   remark #15305: vectorization support: vector length 4
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.094
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15462: unmasked indexed (or gather) loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 19 
   remark #15477: vector cost: 21.250 
   remark #15478: estimated potential speedup: 0.810 
   remark #15487: type converts: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at aftermath.c_aftermath_genmove_line369_loop.c(20,2)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ aftermath.c_aftermath_genmove_line369_loop.c(20,20) ]
LOOP END
===========================================================================
