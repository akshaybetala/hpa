Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 17.0.1.132 Build 20161005

Compiler options: -I/home/varun/hpa/task_2/varun/loops/common -I/home/varun/hpa/task_2/varun/loops/input -O3 -g -std=c99 -xHost -vec-threshold100 -vec -qopt-report-phase=vec -qopt-report=5 -o cache.c_hashtable_partially_clear_line317.vec -lcrypto -lssl -lm

Begin optimization report for: loop()

    Report from: Vector optimizations [vec]


LOOP BEGIN at cache.c_hashtable_partially_clear_line317_loop.c(12,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at cache.c_hashtable_partially_clear_line317_loop.c(12,32)
      remark #15389: vectorization support: reference statistics[k][l] has unaligned access   [ cache.c_hashtable_partially_clear_line317_loop.c(12,56) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.300
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 2 
      remark #15477: vector cost: 0.620 
      remark #15478: estimated potential speedup: 1.900 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at cache.c_hashtable_partially_clear_line317_loop.c(12,32)
   <Remainder loop for vectorization>
   LOOP END
LOOP END
===========================================================================
