Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 17.0.1.132 Build 20161005

Compiler options: -I/home/varun/hpa/task_2/parag/loops/common -I/home/varun/hpa/task_2/parag/loops/input -O3 -g -std=c99 -xHost -vec-threshold100 -vec -qopt-report-phase=vec -qopt-report=5 -o dragon.c_connected_to_eye_line1292.vec -lcrypto -lssl -lm

Begin optimization report for: loop()

    Report from: Vector optimizations [vec]


LOOP BEGIN at dragon.c_connected_to_eye_line1292_loop.c(15,5)
   remark #15389: vectorization support: reference delta[k] has unaligned access   [ dragon.c_connected_to_eye_line1292_loop.c(15,68) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15328: vectorization support: irregularly indexed load was emulated for the variable <board[pos+delta[k]]>, part of index is read from memory   [ dragon.c_connected_to_eye_line1292_loop.c(15,31) ]
   remark #15329: vectorization support: irregularly indexed store was emulated for the variable <mx[pos+delta[k]]>, masked, part of index is read from memory   [ dragon.c_connected_to_eye_line1292_loop.c(15,59) ]
   remark #15305: vectorization support: vector length 4
   remark #15427: loop was completely unrolled
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.011
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15459: masked indexed (or scatter) stores: 1 
   remark #15462: unmasked indexed (or gather) loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 19 
   remark #15477: vector cost: 59.500 
   remark #15478: estimated potential speedup: 0.310 
   remark #15488: --- end vector cost summary ---
LOOP END
===========================================================================
